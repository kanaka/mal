⟨Env⟩ ← •Import "env.bqn"
⟨ReadStr⟩ ← •Import "reader.bqn"
⟨PrStr⟩ ← •Import "printer.bqn"

ns ← Env@
ns.Set "+"‿{1∾+´1⊏˘>𝕩}
ns.Set "-"‿{1∾-´1⊏˘>𝕩}
ns.Set "*"‿{1∾×´1⊏˘>𝕩}
ns.Set "/"‿{1∾⌊∘÷´1⊏˘>𝕩}

EvalAst ← {env 𝕊 t‿v:
  {0: env.Get v ;
   3: env⊸EVAL¨v ;
   t‿v
  }t
}

READ ← ReadStr
PRINT ← PrStr
EVAL ← {
  env 𝕊 3‿⟨⟩: 3‿⟨⟩ ;
  env 𝕊 3‿⟨0‿"def!",0‿k,x⟩:
    v ← env EVAL x
    {¯1:@;env.Set (<k)∾<v}⊑v
    v ;
  outer 𝕊 3‿⟨0‿"let*",t‿binds,exp⟩:
    inner ← Env outer
    {𝕊
      {⟨0‿kw,x⟩: inner.Set (<kw)∾<inner EVAL x}2↑binds
      binds 2⊸↓↩
    }•_while_{𝕊 ⋄ 0<≠binds}@
    inner EVAL exp ;
  env 𝕊 3‿xs:
    ys ← env EvalAst 3‿xs
    f ← ⊑ys
    F 1↓ys ;
  env 𝕊 4‿xs: 4∾<env⊸EVAL¨xs ;
  env 𝕊 5‿xs: 5∾<env⊸EVAL¨xs ;
  env 𝕊 x: env EvalAst x
}
Rep ← PRINT∘{ns EVAL 𝕩}∘READ

{
  •Out "user> "
  line ← •GetLine 0
  •Out Rep line
  𝕊𝕩
}@
